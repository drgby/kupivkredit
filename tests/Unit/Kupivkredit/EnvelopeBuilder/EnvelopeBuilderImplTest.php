<?php
/**
 * Этот файл является частью библиотеки КупиВкредит.
 *
 * Все права защищены (c) 2012 «Тинькофф Кредитные Системы» Банк (закрытое акционерное общество)
 *
 * Информация о типе распространения данного ПО указана в файле LICENSE,
 * распространяемого вместе с исходным кодом библиотеки.
 *
 * This file is part of the KupiVkredit library.
 *
 * Copyright (c) 2012  «Tinkoff Credit Systems» Bank (closed joint-stock company)
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

use Kupivkredit\EnvelopeBuilder\EnvelopeBuilderImpl;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-21 at 11:40:34.
 */
class EnvelopeBuilderImplTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var EnvelopeBuilderImpl
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new EnvelopeBuilderImpl();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Kupivkredit\EnvelopeBuilder\EnvelopeBuilderImpl::build
     */
    public function testBuild()
    {

	    $XMLBuilder = $this->getMock('Kupivkredit\XMLBuilder\IXMLBuilder');
	    $XMLBuilder
		    ->expects($this->once())
		    ->method('makeXML')
		    ->will($this->returnCallback(function($tag, array $data) {
		        $xml = new SimpleXMLElement(sprintf('<%1$s></%1$s>', $tag));
		        array_walk($data, function($value, $key) use ($xml) {
			        if (is_scalar($value)) {
				        $xml->addChild($key, $value);
			        }
		        });

		        return $xml;
	        }));

	    $signService = $this->getMock('Kupivkredit\SignService\ISignService');
	    $signService
	        ->expects($this->once())
		    ->method('sign')
		    ->will($this->returnCallback(function($message, $secret) {
		        return md5($message.$secret);
	        }));

	    /**
	     * @var $XMLBuilder Kupivkredit\XMLBuilder\IXMLBuilder
	     * @var $signService Kupivkredit\SignService\ISignService
	     */
		$this->object->setXMLBuilder($XMLBuilder);
	    $this->object->setSignService($signService);

	    $envelope = $this->object->build(array('value' => uniqid('value')), uniqid());

	    $this->assertInstanceOf('Kupivkredit\Envelope', $envelope);
    }

    /**
     * @covers Kupivkredit\EnvelopeBuilder\EnvelopeBuilderImpl::setXMLBuilder
     */
    public function testSetXMLBuilder()
    {
	    $XMLBuilder = $this->getMock('Kupivkredit\XMLBuilder\IXMLBuilder');
	    /* @var $XMLBuilder Kupivkredit\XMLBuilder\IXMLBuilder */
		$this->object->setXMLBuilder($XMLBuilder);
    }

    /**
     * @covers Kupivkredit\EnvelopeBuilder\EnvelopeBuilderImpl::setSignService
     */
    public function testSetSignService()
    {
	    $signService = $this->getMock('Kupivkredit\SignService\ISignService');
	    /* @var $signService Kupivkredit\SignService\ISignService */
		$this->object->setSignService($signService);
    }
}
